from dynamicalSystems import *
from polynomial import polynomialRepr
from systems.acrobot import getSys

if __name__ == '__main__':
    
    thisRepr = polynomialRepr(4, 4)
    thisAcro = getSys(thisRepr)

    x = np.frombuffer(b'p\x0823\xd4=\xc6\xbf$\xaen\x1c\xc2\xf3\xd4\xbf@\x8fn\xe6\xa4\xa2\xb4\xbfP\x9f\x13\x92)\xec\xd8\xbf\xd4\x7fu\x96\xa4\xe3\xd3\xbfHv\x1c\x13\x16:\xca\xbf8\xe6\xef\xb0\xf5\xc4\xee\xbfT\x01;M\t\r\xd4\xbf\x08A\xc7\xa6\xdc2\xee?.\x0e\xec\x90(\x15\xe3\xbf\x00\xad\x0b\xd0\x96\xa8\x95?\xf02Mz\xfc+\xd0\xbf\xe4\x94\xe4D\x9f\x11\xe6?\xdeHR\xbb\x85B\xe7?\xc0p1\x0e\xbc\x95\xcb\xbf\xdc\x98\xb0{\xf8\x7f\xea\xbf\xe4b"1\xf2\t\xe2\xbf\x00\x87\x1c\x89\xf8\x97\xcd\xbfD\xe2S\x8c\x06\xe8\xda?\x02.>T\x9b^\xe3\xbf')
    x = x.reshape((4,-1))
    
    for k in range(x.shape[1]):
        taylorAll = thisAcro.getTaylorApprox(x[:,k])
        print("string fTaylor")
        print(taylorAll[0].tostring())
        print("string GTaylor")
        print(taylorAll[1].tostring())